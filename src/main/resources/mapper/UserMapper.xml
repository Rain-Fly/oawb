<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.feicui.oawb.dao.UserMapper">

	<!-- 根据用户账号查询用户信息 -->
	<select id="queryUserByAccount" parameterType="java.lang.String" resultType="com.feicui.oawb.po.User">
		select * from user where account=#{account}
	</select>
	
	<!-- 根据用户账号查询用户权限范围内的菜单 -->
	<select id="queryMenuListByAccount" parameterType="java.lang.String" resultType="com.feicui.oawb.po.Permission">
	SELECT * 
	FROM permission 
	WHERE TYPE="menu" AND id IN(
		SELECT permissionID 
		FROM role_permission 
		WHERE roleID IN( 
			SELECT roleID roleID 
			FROM user_role 
			WHERE account=#{account} and isDeleted=0) and isDeleted=0) and isDeleted=0
	</select>
	
	<!-- 根据用户账号查询用户权限 -->
	<select id="queryPermissionListByAccount" parameterType="java.lang.String" resultType="com.feicui.oawb.po.Permission">
	SELECT * 
	FROM permission 
	WHERE TYPE="permission" AND id IN(
		SELECT permissionID 
		FROM role_permission 
		WHERE roleID IN( 
			SELECT roleID roleID 
			FROM user_role 
			WHERE account=#{account} and isDeleted=0) and isDeleted=0) and isDeleted=0
	</select>
	
	<!-- 根据用户账号查询所有权限 -->
	<select id="queryAllPermissionsByAccount" parameterType="java.lang.String" resultType="com.feicui.oawb.po.Permission">
	SELECT * 
	FROM permission 
	WHERE id IN(
		SELECT permissionID 
		FROM role_permission 
		WHERE roleID IN( 
			SELECT roleID roleID 
			FROM user_role 
			WHERE account=#{account} and isDeleted=0) and isDeleted=0) and isDeleted=0
	</select>
	
	<!-- 查询所有用户信息 -->
	<select id="queryAllUsers" resultType="user">
		select * from user where isDeleted=0
	</select>
	
	<!-- 添加用户 -->
	<insert id="insertUser" parameterType="user">
		INSERT INTO USER(account,password,realName,salt,author,updater,createTime,createDate,
						updateDate,tel,email,sex,deptID,companyID)
		VALUES(#{account},#{password},#{realName},#{salt},#{author},#{updater},#{createTime},#{createDate},
						#{updateDate},#{tel},#{email},#{sex},#{deptID},#{companyID})
	</insert>
	
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="string">
		UPDATE USER SET isDeleted=1 WHERE account=#{account}
	</delete>
	
	<!-- 修改用户信息 -->
	<update id="updateUser" parameterType="user">
		UPDATE user
		SET realName=#{realName},tel=#{tel},email=#{email},sex=#{sex},deptID=#{deptID},
			companyID=#{companyID},updater=#{updater},updateDate=#{updateDate}
		WHERE account=#{account}
	</update>
	
	<!-- 重置密码 -->
	<update id="resetPassword" parameterType="user">
		UPDATE USER 
		SET PASSWORD=#{password},salt=#{salt}
		WHERE account=#{account}
	</update>
	
	<!-- 修改用户角色信息 -->
	<update id="updateUserRole" parameterType="userRole">
		UPDATE user_role
		SET updater=#{updater},updateDate=#{updateDate}
		WHERE account=#{account} AND roleID=#{roleID}
	</update>
	
	<!-- 删除用户角色信息 -->
	<update id="deleteUserRole" parameterType="userRole">
		UPDATE user_role
		SET updater=#{updater},updateDate=#{updateDate},isDeleted=1
		WHERE account=#{account} AND roleID=#{roleID}
	</update>
	
	<!-- 添加用户角色信息 -->
	<insert id="insertUserRole" parameterType="userRole">
		INSERT INTO user_role(account,roleID,author,updater,createTime,createDate,updateDate)
		VALUES(#{account},#{roleID},#{author},#{updater},#{createTime},#{createDate},#{updateDate})
	</insert>
</mapper>